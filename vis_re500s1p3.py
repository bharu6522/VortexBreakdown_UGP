# -*- coding: utf-8 -*-
"""vis_Re500S1p3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mIR_ZhcDnayMJrxze6zT_aCeTXr9iaOW
"""



import os
import numpy as np
import matplotlib.pyplot as plt

# Clear variables
plt.clf()
plt.cla()
plt.close('all')

# Parameters
nx = 241
ny = 241
Lx = 20
Ly = 20
pathReq = '/content/mean_file'  # path to statistics files directory
nCont = 50
pathOut = '/content/mean_out'
dT = 0.01 * 1000
cMin = -0.2 # cMin and cMax, the minimum and maximum values of the contour levels
cMax = 1.5

# Generate grid to visualize
x = np.linspace(0, Lx, nx) #to generate evenly spaced arrays
y = np.linspace(-Ly/2, Ly/2, ny) 
X, Y = np.meshgrid(x, y) # to create a 2D coordinate grid
izMid = (ny - 1) // 2 + 1 #index of the middle point in the y direction.

# Read each file and plot
figH = plt.figure()
for fNo in range(1, 1000):
    # Read umean file
    filename = os.path.join(pathReq, f'umean{fNo:03d}') 
    if not os.path.exists(filename):
        continue 
    with open(filename, 'rb') as fid:
        um = np.fromfile(fid, dtype=np.float64)
        um = um.reshape((nx, ny, ny), order='F')
        umY0Z0 = um[izMid - 1, :, izMid - 1]

    # Read vmean file
    filename = os.path.join(pathReq, f'vmean{fNo:03d}') 
    if not os.path.exists(filename):
        continue
    with open(filename, 'rb') as fid:
        vm = np.fromfile(fid, dtype=np.float64)
        vm = vm.reshape((nx, ny, ny), order='F')
        vmY0Z0 = vm[izMid - 1, :, izMid - 1]

    # Read wmean file
    filename = os.path.join(pathReq, f'wmean{fNo:03d}') 
    if not os.path.exists(filename):
        continue
    with open(filename, 'rb') as fid:
        wm = np.fromfile(fid, dtype=np.float64)
        wm = wm.reshape((nx, ny, ny), order='F')
        wmY0Z0 = wm[izMid - 1, :, izMid - 1]

    # Plot umean, vmean, and wmean in X-Z plane (y=0)
    levels = np.linspace(cMin, cMax, nCont)
    cmap = plt.cm.get_cmap('jet')
    cmap.set_under(cmap(levels[0]))

    plt.subplot(1, 3, 1)
    plt.contourf(Y, X, umY0Z0.T, levels=levels, cmap=cmap, extend='min')
    plt.clim([cMin, cMax])
    plt.colorbar()
    plt.axis('tight')
    plt.xlabel('y')
    plt.ylabel('z')
    plt.title('umean')

    plt.subplot(1, 3, 2)
    plt.contourf(Y, X, vmY0Z0.T, levels=levels, cmap=cmap, extend='min')
    plt.clim([cMin, cMax])